{"ast":null,"code":"var _jsxFileName = \"/Users/jacobyi/repos/portfolio-site/src/components/ThemeToggler.jsx\";\nimport React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ThemeToggler(props) {\n  const {\n    onClick\n  } = props;\n\n  const handleOnChange = darkMode => {\n    darkMode.toggle();\n    onClick();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Consumer, {\n      children: values => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(DarkModeToggle, {\n          onChange: () => handleOnChange(values.darkMode),\n          checked: values.darkMode.value,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ThemeToggler;\nThemeToggler.propTypes = {\n  onClick: PropTypes.func\n};\nThemeToggler.defaultProps = {\n  onClick: () => {}\n};\nexport default ThemeToggler;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeToggler\");","map":{"version":3,"names":["React","DarkModeToggle","PropTypes","AppContext","ThemeToggler","props","onClick","handleOnChange","darkMode","toggle","values","marginBottom","value","propTypes","func","defaultProps"],"sources":["/Users/jacobyi/repos/portfolio-site/src/components/ThemeToggler.jsx"],"sourcesContent":["import React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\n\nfunction ThemeToggler(props) {\n  const { onClick } = props;\n  const handleOnChange = (darkMode) => {\n    darkMode.toggle();\n    onClick();\n  };\n\n  return (\n    <>\n      <AppContext.Consumer>\n        {(values) => (\n          <div style={{ marginBottom: 8 }}>\n            <DarkModeToggle\n              onChange={() => handleOnChange(values.darkMode)}\n              checked={values.darkMode.value}\n              size={50}\n            />\n          </div>\n        )}\n      </AppContext.Consumer>\n    </>\n  );\n}\n\nThemeToggler.propTypes = {\n  onClick: PropTypes.func,\n};\nThemeToggler.defaultProps = {\n  onClick: () => {},\n};\n\nexport default ThemeToggler;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAC3B,MAAM;IAAEC;EAAF,IAAcD,KAApB;;EACA,MAAME,cAAc,GAAIC,QAAD,IAAc;IACnCA,QAAQ,CAACC,MAAT;IACAH,OAAO;EACR,CAHD;;EAKA,oBACE;IAAA,uBACE,QAAC,UAAD,CAAY,QAAZ;MAAA,UACII,MAAD,iBACC;QAAK,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAhB,CAAZ;QAAA,uBACE,QAAC,cAAD;UACE,QAAQ,EAAE,MAAMJ,cAAc,CAACG,MAAM,CAACF,QAAR,CADhC;UAEE,OAAO,EAAEE,MAAM,CAACF,QAAP,CAAgBI,KAF3B;UAGE,IAAI,EAAE;QAHR;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAeD;;KAtBQR,Y;AAwBTA,YAAY,CAACS,SAAb,GAAyB;EACvBP,OAAO,EAAEJ,SAAS,CAACY;AADI,CAAzB;AAGAV,YAAY,CAACW,YAAb,GAA4B;EAC1BT,OAAO,EAAE,MAAM,CAAE;AADS,CAA5B;AAIA,eAAeF,YAAf"},"metadata":{},"sourceType":"module"}